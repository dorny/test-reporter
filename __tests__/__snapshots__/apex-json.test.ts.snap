// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`apex-json tests matches report snapshot 1`] = `
TestRunResult {
  "coveragePercentage": 85,
  "path": "fixtures/apex-json.json",
  "suites": [
    TestSuiteResult {
      "coveragePercentage": 85,
      "groups": [
        TestGroupResult {
          "name": "fflib_SecurityUtilsTest",
          "tests": [
            TestCaseResult {
              "error": {
                "details": "Validation Errors While Saving Record(s)",
              },
              "name": "testSetup",
              "result": "failed",
              "time": 4368,
            },
            TestCaseResult {
              "error": undefined,
              "name": "readonly_field_access",
              "result": "success",
              "time": 880,
            },
            TestCaseResult {
              "error": undefined,
              "name": "readonly_objectAndField_access",
              "result": "success",
              "time": 628,
            },
            TestCaseResult {
              "error": undefined,
              "name": "readonly_object_access",
              "result": "success",
              "time": 581,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sysadmin_objectAndField_access",
              "result": "success",
              "time": 237,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_StringBuilderTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "testCommaDelimitedBuilder1",
              "result": "success",
              "time": 18,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testCommaDelimitedBuilder2",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testCommanDelimitedBuilderWithAlternativeDelimiter",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testCommanDelimitedBuilderWithAlternativeDelimiterAndPrefix",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testCommanDelimitedBuilderWithItemPrefix",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testFieldListBuilder",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testMultiCurrencyFieldListBuilder",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testfflib_StringBuilder1",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testfflib_StringBuilder2",
              "result": "success",
              "time": 8,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_ApplicationTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "callingDomainFactoryShouldGiveRegisteredImplsAndMocks",
              "result": "success",
              "time": 190,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingDomainFactoryWithContructorClassThatDoesNotSupportIConstructableShouldGiveException",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingDomainFactoryWithGenericListShouldGiveException",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingDomainFactoryWithIdsShouldGiveRegisteredImpls",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingDomainFactoryWithInAccessableConstructorShouldGiveException",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingDomainFactoryWithNoSObjectTypeShouldGiveException",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingMockedUnitOfWorkWithCustomDML",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingMockedUnitOfWorkWithCustomObjectTypesAndDML",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingSelectorFactorySelectByIdWithEmptyListShouldGiveException",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingSelectorFactorySelectByIdWithMixedIdTypeListShouldGiveException",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingSelectorFactoryShouldGiveRegisteredImpls",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingSelectoryFactorySelectByIdShouldReturnResults",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingSelectoryFactorySselectByRelationshipPassRelatedIds",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingServiceFactoryShouldGiveRegisteredImplsAndMockImpls",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingUnitOfWorkFactoryShouldGivenStandardImplsAndMockImpls",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingUnitOfWorkFactoryWithCustomTypesShouldGivenStandardImplsAndMockImpls",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingUnitOfWorkWithCustomDML",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "callingUnitOfWorkWithCustomObjectTypesAndDML",
              "result": "success",
              "time": 9,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_SObjectDomainTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnTheChangedRecordsBySObjectFields",
              "result": "success",
              "time": 19,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnTheChangedRecordsByStringFields",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testDisableTriggerEventsBehaviour",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testErrorLogging",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testGetChangedFieldsAsStrings",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testInsertValidationFailedWithoutDML",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testObjectSecurity",
              "result": "success",
              "time": 154,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testOnAfterUndeleteWithoutDML",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testOnBeforeDeleteWithoutDML",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testOnValidateBehaviorDefault",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testOnValidateBehaviorOld",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRecursiveTriggerState",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testTriggerState",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testUpdateValidationFailedWithoutDML",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testValidationWithoutDML",
              "result": "success",
              "time": 5,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_SObjectSelectorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "testSetup",
              "result": "success",
              "time": 869,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAddQueryFactorySubselect",
              "result": "success",
              "time": 124,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAddQueryFactorySubselect2",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAssertIsAccessible",
              "result": "success",
              "time": 257,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testCRUDOff",
              "result": "success",
              "time": 245,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testConfigureQueryFactoryFields",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testDefaultConfig",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testGetFieldListString",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testGetRelatedFieldListString",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testGetSObjectName",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testQueryLocatorById",
              "result": "success",
              "time": 117,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testSOQL",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testSOQL_defaultSorting",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testSelectSObjectsById",
              "result": "success",
              "time": 78,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testWithOrderingNullsLast",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testWithoutSorting",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_PolymorphicSelectInMulticurrency_Expect_RelatedType",
              "result": "success",
              "time": 40,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_PolymorphicSelect_Expect_RelatedType",
              "result": "success",
              "time": 17,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_SystemModeAndChildRelationship_Expect_WellFormedSOQL",
              "result": "success",
              "time": 23,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_SystemModeAndParentRelationshipAndDuplicateFields_Expect_WellFormedSOQL",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_SystemModeAndUserCannnotReadField_Expect_Success",
              "result": "success",
              "time": 591,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_SystemModeAndUserCannnotReadObject_Expect_Success",
              "result": "success",
              "time": 531,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_SystemModePolymorphicSelect_Expect_RelatedType",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_UserModeAndUserCannnotReadField_Expect_QueryException",
              "result": "success",
              "time": 590,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toSOQL_When_UserModeAndUserCannnotReadObject_Expect_QueryException",
              "result": "success",
              "time": 403,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_SObjectUnitOfWorkTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "constructUserModeDML_When_AccessLevelSupplied_Expect_SameAccessLevel",
              "result": "success",
              "time": 19,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructUserModeDML_When_DefaultConstructor_Expect_UserMode",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAssertForEventSObjectType",
              "result": "success",
              "time": 17,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAssertForEventSObjectType_ThrowExceptionOnNonEventObject",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAssertForNonEventSObjectType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAssertForNonEventSObjectType_ThrowExceptionOnEventObject",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testAssertForSupportedSObjectType_throwExceptionOnUnsupportedType",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testDerivedUnitOfWork_CommitDMLFail",
              "result": "success",
              "time": 45,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testDerivedUnitOfWork_CommitDoWorkFail",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testDerivedUnitOfWork_CommitSuccess",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterDeleted",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterDirtyRecordsWithDirtyFields",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterDirtyRecordsWithDirtyFields_failing",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterDirty_ExpectReplacement",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterDirty_ThrowExceptionOnNewRecord",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterDirty_field",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterEmptyRecycleBin",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterNew_ThrowExceptionOnDirtyRecord",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterPermanentlyDeleted",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testRegisterUpsert",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testUnitOfWorkEmail",
              "result": "success",
              "time": 9,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_SObjectsTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "itShouldClearTheField",
              "result": "success",
              "time": 39,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnFieldValues",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnRecordsIds",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnRecordsWithAllFieldValues",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnRecordsWithFieldValues",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnRecordsWithShippingCountry",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnRecordsWithoutAllFieldValues",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnRecordsWithoutFieldValues",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnTheDomainsType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldSetFieldValue",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldSetFieldValueByCondition",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testDomainErrorLogging",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testErrorLogging",
              "result": "success",
              "time": 8,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_ObjectsTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "itShouldContainAllTheObjects",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldContainTheObject",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldGetTheObjectType",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldHaveAnEmptyDomain",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldNotBeAnEmptyDomain",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldNotContainTheObject",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldNotContainTheObjects",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "itShouldReturnTheCorrectType",
              "result": "success",
              "time": 2,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_QueryFactoryTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueriesWithChildRelationshipNoAccessibleCheck_fail",
              "result": "success",
              "time": 144,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueriesWithChildRelationshipNoAccessibleCheck_success",
              "result": "success",
              "time": 22,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueriesWithChildRelationshipObjCheckIsAccessible_success",
              "result": "success",
              "time": 18,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueriesWithChildRelationshipObj_success",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueriesWithChildRelationship_success",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueries_invalidChildRelationship",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueries_invalidChildRelationshipTooDeep",
              "result": "success",
              "time": 25,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQueries_success",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "addChildQuerySameRelationshipAgain_success",
              "result": "success",
              "time": 24,
            },
            TestCaseResult {
              "error": undefined,
              "name": "checkFieldObjectReadSort_success",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "checkFieldRead_fail",
              "result": "success",
              "time": 379,
            },
            TestCaseResult {
              "error": undefined,
              "name": "checkObjectRead_fail",
              "result": "success",
              "time": 203,
            },
            TestCaseResult {
              "error": undefined,
              "name": "deepCloneBasic",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "deepCloneBasicNoChanges",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "deepCloneSubquery",
              "result": "success",
              "time": 116,
            },
            TestCaseResult {
              "error": undefined,
              "name": "deepCloneSubqueryNoChanges",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "deterministic_toSOQL",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "duplicateFieldSelection",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "equalityCheck",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "fieldSelections",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidCrossObjectField",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidFieldTests",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidField_nullToken",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidField_string",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidFields_noQueryField",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidFields_nullToken",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "invalidFields_string",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "nonReferenceField",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ordering",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "queryFieldsNotEquals",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "queryWith_noFields",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "setOrdering_ReplacesPreviousOrderingsWithExpectedOrdering",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "simpleFieldCondition",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "simpleFieldSelection",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testSoql_allRows",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "testSoql_unsortedSelectFields",
              "result": "success",
              "time": 10,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_SObjectDescribeTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "FieldsMap",
              "result": "success",
              "time": 28,
            },
            TestCaseResult {
              "error": undefined,
              "name": "GlobalDescribeMap",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NamespacedAttributeMap_implementations",
              "result": "success",
              "time": 107,
            },
            TestCaseResult {
              "error": undefined,
              "name": "flushCache",
              "result": "success",
              "time": 27,
            },
            TestCaseResult {
              "error": undefined,
              "name": "getAccountDescribes",
              "result": "success",
              "time": 25,
            },
            TestCaseResult {
              "error": undefined,
              "name": "getDescribe_badInput",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "rawGlobalDescribeCheck",
              "result": "success",
              "time": 47,
            },
            TestCaseResult {
              "error": undefined,
              "name": "simpleAccountFieldDescribe",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "simpleAccountFieldSetDescribe",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "simpleAccountGetNameField",
              "result": "success",
              "time": 10,
            },
          ],
        },
        TestGroupResult {
          "name": "DomainProcessInjectionTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "DomainProcessInjectionMethodTest",
              "result": "success",
              "time": 136,
            },
            TestCaseResult {
              "error": undefined,
              "name": "accountInsertTwoCriteria",
              "result": "success",
              "time": 234,
            },
            TestCaseResult {
              "error": undefined,
              "name": "accountUpdateTwoCriteria",
              "result": "success",
              "time": 82,
            },
            TestCaseResult {
              "error": undefined,
              "name": "accountUpdateTwoCriteriaAsync",
              "result": "success",
              "time": 209,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyDomainProcessCoordinatorConstructorException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyNewInstanceExceptionWithBadParams",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyNewInstanceExceptionWithNullParams",
              "result": "success",
              "time": 4,
            },
          ],
        },
        TestGroupResult {
          "name": "PlatformEventDistributorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "whenAT4DXImmediateMessagePublishedToEventBusTriggerHandlerProcessesEvent",
              "result": "success",
              "time": 418,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAT4DXMessagePublishedToEventBusTriggerHandlerProcessesEvent",
              "result": "success",
              "time": 243,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenInvalidConsumerSuppliedExceptionThrown",
              "result": "success",
              "time": 149,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenTriggerHandlerInvokedWithEventsWithoutCategoryOrEventNameFieldExceptionThrown",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenTriggerHandlerInvokedWithMatchEventBus",
              "result": "success",
              "time": 76,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenTriggerHandlerInvokedWithMatchEventBusAndCategory",
              "result": "success",
              "time": 80,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenTriggerHandlerInvokedWithMatchEventBusAndCategoryAndEventName",
              "result": "success",
              "time": 68,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenTriggerHandlerInvokedWithMatchEventBusAndEventName",
              "result": "success",
              "time": 83,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenTriggerHandlerInvokedWithMatchEventBusWithAsynchronousSubscriber",
              "result": "success",
              "time": 141,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_QualifiedMethodTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "equalsReturnsExpectedResults",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "equalsReturnsExpectedResultsForHasDependentMocks",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "hashCodeReturnsExpectedResults",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "hashCodeReturnsExpectedResultsForHasDependentMocks",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "toStringReturnsExpectedResult",
              "result": "success",
              "time": 7,
            },
          ],
        },
        TestGroupResult {
          "name": "di_PlatformCacheTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenANewConfigSettingThenGetThatInstance",
              "result": "success",
              "time": 450,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenCacheMapAddedThenGetKeys",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenCachedBindingsClearThenGetEmpty",
              "result": "success",
              "time": 32,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenDataInCachePartitionIsEnabledThenGetEmptyKeys",
              "result": "success",
              "time": 42,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenDataInCachePartitionIsNotEnabledThenGetEmptyKeys",
              "result": "success",
              "time": 30,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenDevNameAndSTypeThenGetHashAndKey",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenInvalidDeveloperNameThenGetEmptyKeys",
              "result": "success",
              "time": 36,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenInvalidSObjectTypeThenGetEmptyKeys",
              "result": "success",
              "time": 31,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenKeyIndexNameThenGetKey",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenLogMethodThenGetKeys",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenNoDataInCachePartitionThenGetEmptyKeys",
              "result": "success",
              "time": 35,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenNoPlatformCacheInstanceThenCreate",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenPartitionNameSetThenGetNonNull",
              "result": "success",
              "time": 27,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenPartitionTTLSetThenGetSeconds",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenPlatformCacheConfigThenCreate",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenReadOnlyAccessThenGetInstance",
              "result": "success",
              "time": 186,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenStoringBindingIsTrueThenGet",
              "result": "success",
              "time": 32,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenValidBindingThenAddBinding",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenValidSTypeAndNameThenHash",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenValidTSTypeAndNameThenHash",
              "result": "success",
              "time": 8,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_QualifiedMethodAndArgValuesTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "equalsReturnsExpectedResults",
              "result": "success",
              "time": 27,
            },
          ],
        },
        TestGroupResult {
          "name": "ApplicationSObjectSelectorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "getSObjectFieldListTest",
              "result": "success",
              "time": 257,
            },
            TestCaseResult {
              "error": undefined,
              "name": "selectionInjectionTest",
              "result": "success",
              "time": 157,
            },
          ],
        },
        TestGroupResult {
          "name": "ApplicationSObjectUnitOfWorkTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "verifyApplicationSobjectUOWConstructorWithDML",
              "result": "success",
              "time": 115,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyGetDeletedRecordsByType",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisterDirtyWithParentRecord",
              "result": "success",
              "time": 195,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisterEmails",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisterNewWithParentRecord",
              "result": "success",
              "time": 134,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisterSingleRecordReturnDirtyRecordsByType",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisterSingleRecordReturnsNewRecordsByType",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisteredRecordListReturnDirtyRecordsByType",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyRegisteredRecordListReturnsNewRecordsByType",
              "result": "success",
              "time": 6,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_MethodArgValuesTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "equalsReturnsExpectedResults",
              "result": "success",
              "time": 21,
            },
            TestCaseResult {
              "error": undefined,
              "name": "hashCodeReturnsExpectedResults",
              "result": "success",
              "time": 7,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_MatcherDefinitionsTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeAfter_WithNullFromDatetime_ThrowsException",
              "result": "success",
              "time": 134,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeAfter_WithNullInclusive_ThrowsException",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeBefore_WithNullInclusive_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeBefore_WithNullToDatetime_ThrowsException",
              "result": "success",
              "time": 67,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeBetween_WithNullFromDatetime_ThrowsException",
              "result": "success",
              "time": 71,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeBetween_WithNullInclusiveFrom_ThrowsException",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeBetween_WithNullInclusiveTo_ThrowsException",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDatetimeBetween_WithNullToDatetime_ThrowsException",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalBetween_WithNullInclusiveLower_ThrowsException",
              "result": "success",
              "time": 51,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalBetween_WithNullInclusiveUpper_ThrowsException",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalBetween_WithNullLower_ThrowsException",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalBetween_WithNullUpper_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalLessThan_WithNullInclusive_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalLessThan_WithNullToMatch_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalMoreThan_WithNullInclusive_ThrowsException",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructDecimalMoreThan_WithNullToMatch_ThrowsException",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructEq_WithNullArg_ThrowsException",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructFieldSetEquivalentTo_WithNullFieldSet_ThrowsException",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructRefEq_WithNullArg_ThrowsException",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructSObjectOfType_WithNullArg_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructSObjectWithId_WithNullArg_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructSObjectWithName_WithNullArg_ThrowsException",
              "result": "success",
              "time": 174,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructSObjectWith_WithEmptyArg_ThrowsException",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructSObjectWith_WithNullArg_ThrowsException",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructSObjectsWith_WithNullArg_ThrowsException",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructStringContains_WithNullArg_ThrowsException",
              "result": "success",
              "time": 72,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructStringEndsWith_WithNullArg_ThrowsException",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructStringMatches_WithNullArg_ThrowsException",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "constructStringStartsWith_WithNullArg_ThrowsException",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyBooleanMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyBooleanToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDateMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDateToStringReturnsExpectedString",
              "result": "success",
              "time": 51,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDatetimeMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDatetimeToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDecimalMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDecimalToStringReturnsExpectedString",
              "result": "success",
              "time": 51,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDoubleMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyDoubleToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyFieldSetMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 986,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyFieldSetToStringReturnsExpectedString",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyIdMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyIdToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyIntegerMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 130,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyIntegerToStringReturnsExpectedString",
              "result": "success",
              "time": 62,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyListMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyListToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyLongMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyLongToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyObjectMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyObjectToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnySObjectFieldMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 63,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnySObjectFieldToStringReturnsExpectedString",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnySObjectMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnySObjectToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnySObjectTypeMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnySObjectTypeToStringReturnsExpectedString",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyStringMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenAnyStringToStringReturnsExpectedString",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenCombinedMatcherToStringReturnsExpectedString",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenCombinedMatchesWithAllExpressionShouldReturnCorrectResults",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenCombinedMatchesWithAtLeastOneExpressionShouldReturnCorrectResults",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenCombinedMatchesWithNoneExpressionShouldReturnCorrectResults",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenConstructingCombinedWithEmptyInternalMatchersShouldThrowException",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenConstructingCombinedWithNullConnectiveExpressionShouldThrowException",
              "result": "success",
              "time": 49,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenConstructingCombinedWithNullInternalMatchersShouldThrowException",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeAfterMatchesWithInclusiveShouldReturnCorrectResults",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeAfterMatchesWithoutInclusiveShouldReturnCorrectResults",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeAfterWithInclusiveToStringReturnsExpectedString",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeAfterWithNotInclusiveToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBeforeMatchesWithInclusiveShouldReturnCorrectResults",
              "result": "success",
              "time": 63,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBeforeMatchesWithoutInclusiveShouldReturnCorrectResults",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBeforeWithInclusiveToStringReturnsExpectedString",
              "result": "success",
              "time": 63,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBeforeWithNotInclusiveToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBetweenMatchesWithInclusiveFromWithoutInclusiveToShouldReturnCorrectResults",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBetweenMatchesWithInclusiveToWithoutInclusiveFromShouldReturnCorrectResults",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBetweenWithInclusiveToStringReturnsExpectedString",
              "result": "success",
              "time": 62,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDatetimeBetweenWithNotInclusiveToStringReturnsExpectedString",
              "result": "success",
              "time": 63,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDecimalBetweenMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDecimalBetweenToStringReturnsExpectedString",
              "result": "success",
              "time": 63,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDecimalLessThanMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDecimalLessThanToStringReturnsExpectedString",
              "result": "success",
              "time": 63,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDecimalMoreThanMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDecimalMoreThanToStringReturnsExpectedString",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenEqMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 66,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenEqToStringShouldReturnExpectedString",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenFieldSetEquivalentToMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 875,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenFieldSetEquivalentToToStringReturnsExpectedString",
              "result": "success",
              "time": 876,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenFieldSetEquivalentToWithoutFieldSetShouldNeverMatch",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenIsBlankWithMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenIsNotBlankWithMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenIsNotNullMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenIsNotNullToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenIsNullMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenIsNullToStringReturnsExpectedString",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenJSONExceptionOccursStringifyShouldReturnsObjectToString",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenListContainsMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenListContainsToStringReturnsExpectedString",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenListIsEmptyMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenListIsEmptyToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenRefEqMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenRefEqToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectOfTypeMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectOfTypeToStringReturnsExpectedString",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectWithIdMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectWithIdToStringReturnsExpectedString",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectWithMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectWithNameMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 76,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectWithNameToStringReturnsExpectedString",
              "result": "success",
              "time": 59,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectWithToStringReturnsExpectedString",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectsInAnyOrderWithMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectsWithDifferentArityMatchesShouldReturnFalse",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectsWithInOrderMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSObjectsWithToStringReturnsExpectedString",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringContainsMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringContainsToStringReturnsExpectedStrings",
              "result": "success",
              "time": 62,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringEndsWithMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringEndsWithToStringReturnsExpectedStrings",
              "result": "success",
              "time": 54,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringIsBlankToStringReturnsExpectedStrings",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringIsNotBlankToStringReturnsExpectedStrings",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringMatchesMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 56,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringMatchesToStringReturnsExpectedStrings",
              "result": "success",
              "time": 55,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringStartsWithMatchesShouldReturnCorrectResults",
              "result": "success",
              "time": 58,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStringStartsWithToStringReturnsExpectedStrings",
              "result": "success",
              "time": 57,
            },
          ],
        },
        TestGroupResult {
          "name": "di_FlowTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenNullInputWhenObjectCreatedThenSetInitialized",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenStringValueWhenOutputThenStringAddedToSet",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenVariableNameWhenRequiredThenValueAddedToSet",
              "result": "success",
              "time": 4,
            },
          ],
        },
        TestGroupResult {
          "name": "di_InjectorCMPFlowProxyControllerTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenValueWhenGetInjectThenThrowException",
              "result": "success",
              "time": 30,
            },
          ],
        },
        TestGroupResult {
          "name": "di_InjectorComponentControllerTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenApexPageComponentGetInjectorIsValid",
              "result": "success",
              "time": 18,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenFlowNameWhenGetInjectorFlowProxyInstanceThenMethodCall",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenLightningComponentGetBindingId",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenWrongBindingNameValueWhenGetInjectThenThrowException",
              "result": "success",
              "time": 137,
            },
          ],
        },
        TestGroupResult {
          "name": "AbstractSelectorMethodInjectableTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "verifyAbstractSelectorMethodInjection",
              "result": "success",
              "time": 477,
            },
          ],
        },
        TestGroupResult {
          "name": "AbstractSelectorQueryLocatorInjectblTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "verifyAbstractSelectorQueryLocatorInjection",
              "result": "success",
              "time": 352,
            },
          ],
        },
        TestGroupResult {
          "name": "di_InjectorControllerTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenStandardControllerWhenObjectCreatedThenConstructorCalled",
              "result": "success",
              "time": 264,
            },
          ],
        },
        TestGroupResult {
          "name": "di_InjectorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenBindingsWithAlternateObjectNameThenBindingIsReturned",
              "result": "success",
              "time": 52,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenInjectorWithBindingsThenBindingIsReturned",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenInstanceNameThenGetException",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenInstanceThenGetThatInstance",
              "result": "success",
              "time": 20,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenListOfModulesBindThenGetCount",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenNoBindingsGetInstanceShouldThrowException",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenNullParamterInGetInstanceThenThrowException",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenNullSTypeParamterInGetInstanceThenThrowException",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "test",
              "result": "success",
              "time": 259,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenDeveloperNameIsEmptyThenGetInstanceShouldThrowException",
              "result": "success",
              "time": 7,
            },
          ],
        },
        TestGroupResult {
          "name": "ApplicationFactoryTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "Application_Domain_Constructor2Test",
              "result": "success",
              "time": 273,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Domain_ConstructorTest",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Domain_MockDomainConstructor2Test",
              "result": "success",
              "time": 57,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Domain_MockDomainConstructorTest",
              "result": "success",
              "time": 60,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Selector_HappyPathTest",
              "result": "success",
              "time": 119,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Selector_PrioritizationTest",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Selector_SelectByIdHelperTest",
              "result": "success",
              "time": 71,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Selector_SelectByRelationshipTest",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Selector_SetMockTest",
              "result": "success",
              "time": 50,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Service_HappyPathTest",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Service_MockServiceTest",
              "result": "success",
              "time": 65,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_Service_MultiServiceTest",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Application_UnitOfWork_HappyPathTest",
              "result": "success",
              "time": 121,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_AnswerTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "thatAnswerOnlyForTheMethodStubbedWithAnswer",
              "result": "success",
              "time": 53,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatAnswerOnlyForTheStubbedParameter",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatAnswerToDifferentVoidMethods",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatAnswerToVoidAndNotVoidMethods",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatAnswerToVoidMethod",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatAnswersWithException",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatArgumentListEmptyForMethodWithNoArgument",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsThrownWhenAccessNegativeIndexArgument",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsThrownWhenAccessOutOfIndexArgument",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatMethodsParametersAreAccessible",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatMethodsParametersAreAccessibleWhenCalledWithMatchers",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatMultipleAnswersAreHandled",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStoresMethodIntoInvocationOnMock",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStoresMockInstanceIntoInvocationOnMock",
              "result": "success",
              "time": 7,
            },
          ],
        },
        TestGroupResult {
          "name": "PlatformEventDistributorDIModuleTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "whenPlatformEventSubscriptionConsumerBlankExceptionThrown",
              "result": "success",
              "time": 76,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenPlatformEventSubscriptionCustomMetadataPresentVerifyForceDIBinding",
              "result": "success",
              "time": 23,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenPlatformEventSubscriptionEventBusBlankExceptionThrown",
              "result": "success",
              "time": 6,
            },
          ],
        },
        TestGroupResult {
          "name": "di_ModuleTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenBadBindingTypeThenGetModuleException",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenBindingInModuleWhenSetTypeThenGetModule",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenModuleWhenSettingValuesThenGet",
              "result": "success",
              "time": 4,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_SystemTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithCombinedMatcher_ShouldPass",
              "result": "success",
              "time": 26,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithCustomMessage_WithCombinedMatcher_ShouldPass",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithCustomMessage_WithMatch_ShouldPass",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithCustomMessage_WithMismatch_ShouldThrowException",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithCustomMessage_WithNoMatchers_ShouldThrowException",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithCustomMessage_WithTooManyMatchers_ShouldThrowException",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithMatch_ShouldPass",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithMismatch_ShouldThrowException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithNoMatchers_ShouldThrowException",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "assertEquals_WithTooManyMatchers_ShouldThrowException",
              "result": "success",
              "time": 3,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_ArgumentCaptorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "thatArgumentValueIsCaptured",
              "result": "success",
              "time": 76,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatArgumentValueIsCapturedWithInOrderVerification",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCanHandleMultipleCapturesInOneMethodCall",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCanHandleMultipleCapturesInOneMethodCallWithInOrderVerification",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCanPerformFurtherAssertionsOnCapturedArgumentValue",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCanPerformFurtherAssertionsOnCapturedArgumentValueWithInOrderVerification",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArguments",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArgumentsForTheVerifiedMethods",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArgumentsForTheVerifiedMethodsWithInOrderVerification",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArgumentsFromMultipleMethods",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArgumentsFromMultipleMethodsWithInOrderVerification",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArgumentsWithInOrderVerification",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureAllArgumentswhenMethodIsCalledWithTheSameArgument",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureArgumentFromRequestedParameter",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureArgumentFromRequestedParameterWithInOrderVerification",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureArgumentOnlyFromVerifiedMethod",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureArgumentOnlyFromVerifiedMethodWithInOrderVerification",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureLastArgument",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureLastArgumentWithInOrderVerification",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureOnlyMethodsThatMatchesWithOtherMatcherAsWell",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCaptureOnlyMethodsThatMatchesWithOtherMatcherAsWellWithInOrderVerification",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatDoesNotCaptureAnythingWhenCaptorIsWrappedInAMatcher",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatDoesNotCaptureAnythingWhenCaptorIsWrappedInAMatcherWithInOrderVerification",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatDoesNotCaptureIfNotVerified",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatDoesNotCaptureIfNotVerifiedWithInOrderVerification",
              "result": "success",
              "time": 6,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_ApexMocksUtilsTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "makeRelationship_GenericOverload_ReturnsObjectsWithRelationFieldSet",
              "result": "success",
              "time": 293,
            },
            TestCaseResult {
              "error": undefined,
              "name": "makeRelationship_GenericOverload_ThrowsErrorOnInvalidChildType",
              "result": "success",
              "time": 75,
            },
            TestCaseResult {
              "error": undefined,
              "name": "makeRelationship_GenericOverload_ThrowsErrorOnInvalidFieldName",
              "result": "success",
              "time": 73,
            },
            TestCaseResult {
              "error": undefined,
              "name": "makeRelationship_GenericOverload_ThrowsErrorOnInvalidParentType",
              "result": "success",
              "time": 61,
            },
            TestCaseResult {
              "error": undefined,
              "name": "makeRelationship_returnsObjectsWithRelationFieldSet",
              "result": "success",
              "time": 23,
            },
            TestCaseResult {
              "error": undefined,
              "name": "setReadOnlyFields_CreatedByIdSetToCurrentUserId_IdFieldSetSuccessfully",
              "result": "success",
              "time": 17,
            },
            TestCaseResult {
              "error": undefined,
              "name": "setReadOnlyFields_IsDeletedSetOnAccount_BooleanFieldSetSuccessfully",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "setReadOnlyFields_LastReferencedDateSetOnAccount_DateTimeFieldSetSuccessfully",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "setReadOnlyFields_PolymorphicRelationJoin_FieldSetSuccessfully",
              "result": "success",
              "time": 16,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_ApexMocksTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "stubAndVerifyMethodCallsWithNoArguments",
              "result": "success",
              "time": 104,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsthrownWhenReturnMultiPassEmptyList",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsthrownWhenReturnMultiPassNullList",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsthrownWhenStubbingIsNotDone",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsthrownWhenThrowMultiPassEmptyList",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatExceptionIsthrownWhenThrowMultiPassNullList",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatMultipleInstancesCanBeMockedDependently",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatMultipleInstancesCanBeMockedIndependently",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatMultipleVoidMethodsThrowsMultipleExceptions",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatNullCanBeUsedAsExceptionvalue",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatNullCanBeUsedAsReturnValue",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingCanBeChainedFirstValueThenException",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleMethodsCanBeChainedFirstExceptionThenValue",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleMethodsCanBeChainedFirstValueThenException",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithMultiExceptions",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithMultiValue",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithSingleException",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithSingleValue",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnWithMultiExceptions",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnWithMultiValues",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnWithSingleException",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenReturnWithSingleValue",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithMultiExceptions",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithMultiValue",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithSingleException",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithSingleValue",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowWithMultiExceptions",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowWithMultiValues",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowWithSingleException",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMultipleTimesOverridePreviousThenThrowWithSingleValue",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMutipleTimesVoidMethodThrowsMultipleExceptionsOverride",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingMutipleTimesVoidMethodThrowsMultipleExceptionsOverrideWithSingleException",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingReturnsAndThrowsDifferentValuesAndExceptionsForDifferentCalls",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingReturnsDifferentValuesForDifferentCalls",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingReturnsDifferentValuesForDifferentCallsAndRepeatLastValuesForFurtherCalls",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingThrowsAndReturnsDifferentExceptionsAndValuesForDifferentCalls",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingThrowsDifferentExceptionsForDifferentCalls",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStubbingThrowsDifferentExceptionsForDifferentCallsAndRepeatLastExceptionForFurtherCalls",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatToStringReturnsSimpleStringValue",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVoidMethodThrowsMultipleExceptions",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMethodCallWhenNoCallsBeenMadeForType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMethodCallsWithSameNameButDifferentArgumentTypes",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMethodNotCalled",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMultipleMethodCallsWithDifferentSingleArgument",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMultipleMethodCallsWithSameSingleArgument",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifySingleMethodCallWithMultipleArguments",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifySingleMethodCallWithNoArguments",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifySingleMethodCallWithSingleArgument",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMockIsGeneratedCanStubVerify",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMockIsGeneratedCanVerify",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenSetDoThrowWhenExceptionsValuesAreSet",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubCallWithNoArgumentsShouldReturnStubbedValue",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubCustomMatchersCanBeUsed",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubExceptionSameMethodWithMatchersAndNonMatchersShouldStubInOrder",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubExceptionTheExceptionShouldBeThrown",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubExceptionWithMatchersShouldThrowException",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubMultipleCallsWithMatchersShouldReturnExpectedValues",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubMultipleCallsWithMultipleArgumentShouldReturnStubbedValues",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubMultipleCallsWithSingleArgumentShouldReturnStubbedValues",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubMultipleVoidMethodsWithExceptionsThenExceptionsShouldBeThrown",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubNullConcreteArgValueCorrectValueIsReturned",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubSameCallWithDifferentArgumentValueShouldReturnLastStubbedValue",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubSameMethodWithMatchersAndNonMatchersShouldStubInOrder",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubSingleCallWithNullReturnValueItShouldReturnNull",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubSingleCallWithSingleArgumentShouldReturnStubbedValue",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubVoidMethodWithExceptionAndCallMethodTwiceThenExceptionShouldBeThrownTwice",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubVoidMethodWithExceptionThenExceptionShouldBeThrown",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenStubWithMatcherAndNonMatcherArgumentsShouldThrowException",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyCustomMatchersCanBeUsed",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyMethodNeverCalledMatchersAreReset",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyWithCombinedMatchersShouldReturnCorrectMethodCallCounts",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyWithMatcherAndNonMatcherArgumentsShouldThrowException",
              "result": "success",
              "time": 7,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_AnyOrderTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "thatBetweenThrownExceptionIfCalledLessThanAtLeastNumberOfTimes",
              "result": "success",
              "time": 42,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatBetweenThrownExceptionIfCalledLessThanAtLeastNumberOfTimesWithMatchers",
              "result": "success",
              "time": 18,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatBetweenThrownExceptionIfCalledMoreThanAtMostNumberOfTimes",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatBetweenThrownExceptionIfCalledMoreThanAtMostNumberOfTimesWithMatchers",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatCustomMessageIsAdded",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledLessThanAtLeastNumberOfTimes",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledLessThanAtLeastNumberOfTimesWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledLessThanAtLeastOnce",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledLessThanAtLeastOnceNumberOfTimes",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledLessThanAtLeastOnceNumberOfTimesWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledLessThanAtLeastOnceWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledMoreThanAtMostNumberOfTimes",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatThrownExceptionIfCalledMoreThanAtMostNumberOfTimesWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastNumberOfTimes",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastNumberOfTimesWhenIsCalledMoreTimes",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastNumberOfTimesWhenIsCalledMoreTimesWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastNumberOfTimesWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnce",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceNumberOfTimes",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceNumberOfTimesWhenIsCalledMoreTimes",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceNumberOfTimesWhenIsCalledMoreTimesWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceNumberOfTimesWithMatchers",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceWhenIsCalledMoreTimes",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceWhenIsCalledMoreTimesWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtLeastOnceWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtMostNumberOfTimes",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtMostNumberOfTimesWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtMostSameNumberOfTimes",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesAtMostSameNumberOfTimesWithMatchers",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesBetweenNumberOfTimes",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifiesBetweenNumberOfTimesWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNeverFailsWhenCalledMoreTimes",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNeverFailsWhenCalledMoreTimesWithMatchers",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesMethodFailsWhenCalledLessTimes",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesMethodFailsWhenCalledLessTimesWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesMethodFailsWhenCalledMoreTimes",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesMethodFailsWhenCalledMoreTimesWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMethodCallWhenNoCallsBeenMadeForType",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMethodNotCalled",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyMultipleMethodCallsWithSameSingleArgument",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyNeverMethodHasBeenNotCalledWithMatchers",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyNeverMethodHasNotBeenCalled",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifySingleMethodCallWithMultipleArguments",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyTimesMethodHasBeenCalled",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyTimesMethodHasBeenCalledWithMatchers",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyCustomMatchersCanBeUsed",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyMethodNeverCalledMatchersAreReset",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenVerifyWithCombinedMatchersShouldReturnCorrectMethodCallCounts",
              "result": "success",
              "time": 17,
            },
          ],
        },
        TestGroupResult {
          "name": "di_BindingConfigWrapperTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenBindingWrapperThenExtractAndValidate",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenBindingWrapperWithBindingNameExpectDeveloperNameEqualsBindingName",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenBindingWrapperWithMDTThenExtractAndValidate",
              "result": "success",
              "time": 4,
            },
          ],
        },
        TestGroupResult {
          "name": "di_BindingParamTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenBooleansWhenGetParameterThenGetValues",
              "result": "success",
              "time": 26,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenDateTimesWhenGetParameterThenGetValues",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenDatesWhenGetParameterThenGetValues",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenDecimalsWhenGetParameterThenGetValues",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenNullInputWhenGetParameterThenGetNullValue",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenStringsWhenGetParameterThenGetValues",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenUnknownKeyWhenGetParameterThenGetNullValue",
              "result": "success",
              "time": 10,
            },
          ],
        },
        TestGroupResult {
          "name": "di_BindingTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingWhenGetInstanceThenInstance",
              "result": "success",
              "time": 22,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingWhenGetInstanceWithParamThenInstanceWithParam",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingWhenGetNewInstanceThenNewInstance",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingsWithDeveloperNamesWhenSortThenReturnSortedBindingsList",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingsWithSequenceAndWithoutObjectWhenSortThenReturnSortedBindingsList",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingsWithSequenceWhenSortThenReturnSortedBindingsList",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenApexBindingsWithSobjectTypesWhenSortThenReturnSortedBindingsList",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "givenIncorrectApexBindingWhenGetInstanceThenThrowException",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "shouldConvertBindingToStringWhenObjectIsEmptyAndSequenceIsProvided",
              "result": "success",
              "time": 4,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_MatchTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "allOfWith2ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "allOfWith3ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "allOfWith4ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "allOfWithEmptyArgsThrowsException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "allOfWithListArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "allOfWithNoArgsThrowsException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "allOfWithoutRegisteringInnerMatchersThrowsException",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyBooleanRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyDateRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyDatetimeRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyDecimalRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyDoubleRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyFieldSetRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyIdRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyIntegerRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyListRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyLongRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyObjectRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyOfWith2ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyOfWith3ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyOfWith4ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyOfWithListArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anySObjectFieldRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anySObjectRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anySObjectTypeRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "anyStringRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "dateAfterRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "dateBeforeRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "dateBetweenRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "datetimeAfterRegistersCorrectMatcherType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "datetimeBeforeRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "datetimeBetweenRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "decimalBetweenRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "decimalLessThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "decimalMoreThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "doubleBetweenRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "doubleLessThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "doubleMoreThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqBooleanRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqDateRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqDatetimeRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqDecimalRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqDoubleRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqIdRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqIntegerRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqListRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqLongRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqSObjectFieldRegistersCorrectMatcherType",
              "result": "success",
              "time": 69,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqSObjectTypeRegistersCorrectMatcherType",
              "result": "success",
              "time": 19,
            },
            TestCaseResult {
              "error": undefined,
              "name": "eqStringRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "fieldSetEquivalentToRegistersCorrectMatcherType",
              "result": "success",
              "time": 382,
            },
            TestCaseResult {
              "error": undefined,
              "name": "fieldSetEquivalentWithNullFieldSetThrowsException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "integerBetweenRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "integerLessThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "integerMoreThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "isNotNullRegistersCorrectMatcherType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "isNotRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "isNullRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "listContainsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "listIsEmptyRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "longBetweenRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "longLessThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "longMoreThanRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "noneOfWith2ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "noneOfWith3ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "noneOfWith4ArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "noneOfWithListArgsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "refEqRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sObjectOfTypeRegistersCorrectMatcherType",
              "result": "success",
              "time": 20,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sObjectWithIdRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sObjectWithNameRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sObjectWithRegistersCorrectMatcherType",
              "result": "success",
              "time": 20,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sObjectsWithMatchInOrderRegistersCorrectMatcherType",
              "result": "success",
              "time": 28,
            },
            TestCaseResult {
              "error": undefined,
              "name": "sObjectsWithRegistersCorrectMatcherType",
              "result": "success",
              "time": 22,
            },
            TestCaseResult {
              "error": undefined,
              "name": "stringContainsRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "stringEndsWithRegistersCorrectMatcherType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "stringIsBlankRegistersCorrectMatcherType",
              "result": "success",
              "time": 5,
            },
            TestCaseResult {
              "error": undefined,
              "name": "stringIsNotBlankRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "stringMatchesRegistersCorrectMatcherType",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "stringStartsWithRegistersCorrectMatcherType",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithDifferentSizeArgValuesAndMatchersThrowsException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithManyMatchesReturnsTrue",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithManyMismatchesReturnsFalse",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithMatchesAndMismatchesReturnsFalse",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithNullMatchersThrowsException",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithNullMethodArgsArgValuesThrowsException",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithNullMethodArgsThrowsException",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithOneMatchReturnsTrue",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesAllArgsWithOneMismatchReturnsFalse",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesWithOneMatcherRegistersMatcher",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesWithOneMatcherReturnsNull",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "whenMatchesWithOneMatcherSetsMatchingToTrue",
              "result": "success",
              "time": 3,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_InheritorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "canInstantiateMultipleInterfaceInheritor",
              "result": "success",
              "time": 34,
            },
            TestCaseResult {
              "error": undefined,
              "name": "canStubMultipleInterfaceInheritor",
              "result": "success",
              "time": 19,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_InOrderTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "thatMixedVerificationDoNotInterfierWithOtherImplementationChecking",
              "result": "success",
              "time": 72,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStrictVerificationCanBeEnforced",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStrictVerificationCanBeEnforcedWithOldNotation",
              "result": "success",
              "time": 17,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStrictVerificationCanBeEnforcedWithOldNotationUsingDefaultTimesOne",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatStrictVerificationCanBePerformed",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatTimesOneIsTheDefaultVerification",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastConsumeAllTheInstances",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastConsumeAllTheInstancesForOnlyTheMethodVerified",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastConsumesAllTheInstances2",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastOnce",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastOnceConsumesAllTheInstances",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastOnceConsumesInstancesUntilLastMethodVerified",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastOnceThrowsErrorIfCalledLessTimes",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastPassWithMoreCallsThenAsserted",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastPassWithSameCallsOfAssertion",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtLeastThrowsErrorIfCalledLessTimes",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyAtMostThrowsExceptionBecauseNotImplemented",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyBetweenThrowsExceptionBecauseNotImplemented",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderAllTheMethodsCalled",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCallMethodWithMatches",
              "result": "success",
              "time": 26,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCallMethodWithMatchesFailsIfVerifyACallAlreadyInTheMatcher",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCallMethodWithMultipleMatches",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCallMethodWithMultipleMatchesMixed",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCallMethodWithMultipleMatchesMixedFailWhenMatcherHaveAlreadyVerifiedMethod",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCanHandleMixedInOrderInstance",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCanHandleMultipleMethodsCalls",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCanHandleMultipleMethodsCallsAndNotFailsIfVerifyCountIsGreaterThenExpected",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCanHandleMultipleMethodsCallsButFailsIfVerifyCountIsLessThenExpected",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCanHandleMultipleMocks",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderCanSkipMethodsCalledUntilFindTheOneThatNeedsVerify",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderDifferentMethodsCalledWithSameArguments",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderDifferentMethodsCalledWithSameArgumentsDoubleCallFail",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderDifferentMethodsCalledWithSameArgumentsOrderFail",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderThrownExceptionIfVerifyMockInstanceNotInTheSet",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyInOrderThrownExceptionWithCustomMessage",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNever",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNeverFailsWhenCalled",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNeverFailsWhenCalledWithMatchers",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNeverWithMatchers",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNoInteractionsFails",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNoInteractionsPass",
              "result": "success",
              "time": 8,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNoMoreInteractionsFails",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNoMoreInteractionsFailsWhenNoInteracionOccurs",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNoMoreInteractionsFailsWhenOnLyOneMethodLeft",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyNoMoreInteractionsPass",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyThrowsExceptionWhenCallsIsInvochedFromStandardMock",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimes",
              "result": "success",
              "time": 10,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls2",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls3",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls4",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesThrowsExceptionIfCalledLessTimesThanExpected",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesThrowsExceptionIfCalledMoreTimesThanExpected",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatVerifyTimesThrowsExceptionWhenAnotherMethodIsCalledBetweenMethodsCalls",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatWithOldNotation",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatWithOldNotationPassWhenAnotherMethodIsCalledBetweenMethodsCalls",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatWithOldNotationThrowsExceptionIfCalledLessTimesThanExpected",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatWithOldNotationThrowsExceptionIfCalledMoreTimesThanExpected",
              "result": "success",
              "time": 11,
            },
            TestCaseResult {
              "error": undefined,
              "name": "thatWithOldNotationThrowsExceptionWhenAnotherMethodIsCalledBetweenMethodsCalls",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyAtLeastAndCapture",
              "result": "success",
              "time": 13,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyCallsAndCapture",
              "result": "success",
              "time": 12,
            },
            TestCaseResult {
              "error": undefined,
              "name": "verifyTimesAndCaptor",
              "result": "success",
              "time": 11,
            },
          ],
        },
        TestGroupResult {
          "name": "fflib_IDGeneratorTest",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "itShouldGenerateValidIDs",
              "result": "success",
              "time": 19,
            },
          ],
        },
      ],
      "name": "Apex Tests",
      "totalTime": 26480,
    },
  ],
  "totalTime": 26480,
}
`;
